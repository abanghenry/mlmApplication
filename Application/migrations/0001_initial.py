# Generated by Django 4.2.6 on 2023-10-31 18:36

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Awards',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('pv', models.CharField(max_length=255)),
                ('cash_equivalent', models.FloatField(blank=True, null=True)),
                ('rank', models.CharField(blank=True, max_length=191, null=True)),
                ('rank_image', models.CharField(blank=True, max_length=191, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'awards',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Banks',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('user_id', models.PositiveIntegerField()),
                ('currency_id', models.PositiveIntegerField()),
                ('bank_name', models.CharField(max_length=255)),
                ('bank_holder_name', models.CharField(max_length=255)),
                ('bank_account_number', models.CharField(max_length=255)),
                ('bank_branch', models.CharField(blank=True, max_length=255, null=True)),
                ('country', models.CharField(max_length=255)),
                ('type', models.CharField(max_length=255)),
                ('swift', models.CharField(blank=True, max_length=255, null=True)),
                ('bic', models.CharField(blank=True, max_length=255, null=True)),
                ('sort_code', models.CharField(blank=True, max_length=255, null=True)),
                ('routing_no', models.CharField(blank=True, max_length=255, null=True)),
                ('status', models.IntegerField(db_comment='1=active 0=pending')),
                ('default', models.IntegerField()),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('bank_code', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'banks',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BinaryPaymentLogs',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('user_id', models.PositiveIntegerField(blank=True, null=True)),
                ('strong_leg_id', models.IntegerField()),
                ('strong_leg_pv', models.CharField(max_length=255)),
                ('strong_leg_cf', models.CharField(blank=True, max_length=255, null=True)),
                ('weak_leg_id', models.IntegerField()),
                ('weak_leg_pv', models.CharField(max_length=255)),
                ('weak_leg_cf', models.CharField(blank=True, max_length=255, null=True)),
                ('match_sv_used', models.CharField(max_length=255)),
                ('no_of_match', models.CharField(max_length=255)),
                ('pv_to_amount', models.CharField(max_length=255)),
                ('estimate_earning', models.CharField(max_length=255)),
                ('earning', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'binary_payment_logs',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BitCoins',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('user_id', models.IntegerField()),
                ('bit_address', models.CharField(max_length=255)),
                ('status', models.CharField(db_comment='1=active 0=pending', max_length=255)),
                ('default', models.IntegerField()),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'bit_coins',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BonusBinaries',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('user_id', models.PositiveIntegerField(db_comment='owner')),
                ('referral_id', models.PositiveIntegerField(db_comment="user who's action created the bonus")),
                ('pv', models.FloatField(blank=True, null=True)),
                ('date_time_earned', models.DateTimeField()),
                ('source', models.CharField(max_length=255)),
                ('status', models.SmallIntegerField(db_comment='0=pending 1=processing 2=paid 3=flushed 4=cforward')),
                ('details', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'bonus_binaries',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BonusDirectPurchases',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('user_id', models.PositiveIntegerField(db_comment='owner')),
                ('pv', models.FloatField(blank=True, null=True)),
                ('date_time_earned', models.DateTimeField()),
                ('source', models.CharField(db_comment='product_direct', max_length=255)),
                ('date_time_paid', models.DateTimeField(blank=True, null=True)),
                ('status', models.IntegerField(db_comment='0=pending 1=processing 2=paid 3=flushed 4=cforward')),
                ('details', models.CharField(blank=True, max_length=255, null=True)),
                ('transaction_id', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'bonus_direct_purchases',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BonusLoyalties',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('user_id', models.PositiveIntegerField()),
                ('referral_id', models.PositiveIntegerField()),
                ('currency_id', models.PositiveIntegerField(blank=True, null=True)),
                ('currency_code', models.CharField(blank=True, max_length=255, null=True)),
                ('amount', models.FloatField(blank=True, null=True)),
                ('date_time_earned', models.DateTimeField()),
                ('payment_id', models.PositiveIntegerField(blank=True, null=True)),
                ('source', models.CharField(blank=True, max_length=255, null=True)),
                ('date_time_paid', models.DateTimeField(blank=True, null=True)),
                ('status', models.IntegerField(db_comment='0=pending 1=processing 2=paid 3=cforward')),
                ('details', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'bonus_loyalties',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BonusReferrals',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('user_id', models.PositiveIntegerField()),
                ('referral_id', models.PositiveIntegerField()),
                ('currency_id', models.PositiveIntegerField(blank=True, null=True)),
                ('currency_code', models.CharField(blank=True, max_length=199, null=True)),
                ('amount', models.FloatField(blank=True, null=True)),
                ('pv', models.FloatField(blank=True, null=True)),
                ('date_time_earned', models.DateTimeField()),
                ('date_time_paid', models.DateTimeField(blank=True, null=True)),
                ('payment_id', models.PositiveIntegerField(blank=True, null=True)),
                ('source', models.CharField(blank=True, max_length=199, null=True)),
                ('status', models.IntegerField(db_comment='0=pending 1=processing 2=paid 3=cforward')),
                ('details', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'bonus_referrals',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Countries',
            fields=[
                ('id', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('capital', models.CharField(blank=True, max_length=255, null=True)),
                ('citizenship', models.CharField(blank=True, max_length=255, null=True)),
                ('country_code', models.CharField(max_length=3)),
                ('currency', models.CharField(blank=True, max_length=255, null=True)),
                ('currency_code', models.CharField(blank=True, max_length=255, null=True)),
                ('currency_sub_unit', models.CharField(blank=True, max_length=255, null=True)),
                ('currency_symbol', models.CharField(blank=True, max_length=3, null=True)),
                ('currency_decimals', models.IntegerField(blank=True, null=True)),
                ('full_name', models.CharField(blank=True, max_length=255, null=True)),
                ('iso_3166_2', models.CharField(max_length=2)),
                ('iso_3166_3', models.CharField(max_length=3)),
                ('name', models.CharField(max_length=255)),
                ('region_code', models.CharField(max_length=3)),
                ('sub_region_code', models.CharField(max_length=3)),
                ('eea', models.IntegerField()),
                ('calling_code', models.CharField(blank=True, max_length=3, null=True)),
                ('flag', models.CharField(blank=True, max_length=6, null=True)),
            ],
            options={
                'db_table': 'countries',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Currencies',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('code', models.CharField(max_length=255, unique=True)),
                ('prefix', models.CharField(max_length=255)),
                ('suffix', models.CharField(blank=True, max_length=255, null=True)),
                ('format', models.FloatField()),
                ('baserate', models.FloatField(db_column='BaseRate')),
                ('pv_rate', models.FloatField()),
                ('base', models.IntegerField()),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'currencies',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FailedJobs',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('uuid', models.CharField(max_length=255, unique=True)),
                ('connection', models.TextField()),
                ('queue', models.TextField()),
                ('payload', models.TextField()),
                ('exception', models.TextField()),
                ('failed_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'failed_jobs',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Jobs',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('queue', models.CharField(max_length=255)),
                ('payload', models.TextField()),
                ('attempts', models.PositiveIntegerField()),
                ('reserved_at', models.PositiveIntegerField(blank=True, null=True)),
                ('available_at', models.PositiveIntegerField()),
                ('created_at', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'jobs',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Migrations',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('migration', models.CharField(max_length=255)),
                ('batch', models.IntegerField()),
            ],
            options={
                'db_table': 'migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='NigeriaBanks',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('code', models.CharField(max_length=255)),
                ('country', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('bank_code', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'nigeria_banks',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OrderItemMetas',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('order_item_id', models.PositiveIntegerField()),
                ('key', models.CharField(max_length=255)),
                ('value', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'order_item_metas',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OrderItems',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('order_id', models.PositiveIntegerField()),
                ('product_id', models.PositiveIntegerField(blank=True, null=True)),
                ('name', models.CharField(max_length=255)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('type', models.CharField(db_comment='item, tax', max_length=255)),
                ('qty', models.FloatField()),
                ('currency_id', models.PositiveIntegerField()),
                ('amount', models.FloatField()),
                ('discount', models.FloatField()),
                ('total', models.FloatField()),
                ('status', models.CharField(max_length=255)),
                ('store_id', models.PositiveIntegerField()),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'order_items',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Orders',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('orderref', models.CharField(blank=True, db_column='orderRef', max_length=255, null=True)),
                ('parent_id', models.PositiveIntegerField(blank=True, null=True)),
                ('user_id', models.PositiveIntegerField()),
                ('owner_id', models.PositiveIntegerField()),
                ('store_id', models.PositiveIntegerField()),
                ('currency_id', models.PositiveIntegerField()),
                ('number_of_items', models.IntegerField()),
                ('total_sales', models.FloatField()),
                ('total_tax', models.FloatField()),
                ('total_shipping', models.FloatField()),
                ('transaction_fee', models.FloatField()),
                ('total_discount', models.FloatField()),
                ('net_total', models.FloatField()),
                ('status_order', models.CharField(max_length=255)),
                ('invoice_no', models.CharField(blank=True, max_length=255, null=True)),
                ('payment_method', models.CharField(max_length=255)),
                ('payment_status', models.CharField(max_length=255)),
                ('amount_paid', models.CharField(blank=True, max_length=255, null=True)),
                ('amount_balance', models.CharField(blank=True, max_length=255, null=True)),
                ('payment_ref', models.CharField(blank=True, max_length=255, null=True)),
                ('payment_details', models.TextField(blank=True, null=True)),
                ('payment_date', models.DateField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('ip_address', models.CharField(blank=True, max_length=45, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('stockist_paid', models.IntegerField(blank=True, db_comment='1 if stockist bonus has been paid for this order', null=True)),
                ('global_paid', models.IntegerField(blank=True, db_comment='1 if Global Sales bonus has been paid for this order', null=True)),
                ('special_paid', models.IntegerField(blank=True, db_comment='1 if Special bonus has been paid for this order', null=True)),
            ],
            options={
                'db_table': 'orders',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PackagePrices',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('package_id', models.PositiveBigIntegerField()),
                ('currency_id', models.PositiveBigIntegerField()),
                ('currency_code', models.CharField(max_length=255)),
                ('price', models.FloatField()),
                ('capping', models.FloatField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'package_prices',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Packages',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('type', models.CharField(max_length=255)),
                ('referral_bonus', models.CharField(blank=True, max_length=255, null=True)),
                ('pv', models.FloatField()),
                ('image', models.CharField(blank=True, max_length=255, null=True)),
                ('status', models.CharField(db_comment='1=active 0=inactive', max_length=255)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'packages',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PasswordResets',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.CharField(max_length=255)),
                ('token', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'password_resets',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PaymentAwards',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('user_id', models.PositiveIntegerField(blank=True, null=True)),
                ('current_pv_used', models.FloatField(blank=True, null=True)),
                ('award_id', models.IntegerField()),
                ('award_name', models.CharField(max_length=255)),
                ('cash_equivalent', models.FloatField(blank=True, null=True)),
                ('currency_id', models.PositiveIntegerField(blank=True, null=True)),
                ('status', models.CharField(db_comment='pending, processing, paid', max_length=255)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('date_time_paid', models.DateTimeField(blank=True, null=True)),
                ('date_time_to_pay', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'payment_awards',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PaymentBonuses',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('payment_id', models.PositiveIntegerField()),
                ('bonus_id', models.PositiveIntegerField()),
                ('bonus_type', models.CharField(db_comment='referral, binary', max_length=255)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'payment_bonuses',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PaymentJobLogs',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('job_name', models.CharField(max_length=255)),
                ('date_from', models.DateTimeField(blank=True, null=True)),
                ('date_to', models.DateTimeField(blank=True, null=True)),
                ('no_of_payment_generated', models.IntegerField(blank=True, null=True)),
                ('start_time', models.TimeField(blank=True, null=True)),
                ('end_time', models.TimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'payment_job_logs',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Payments',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('user_id', models.PositiveIntegerField()),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('amount', models.FloatField(blank=True, null=True)),
                ('currency_id', models.PositiveIntegerField(blank=True, null=True)),
                ('bonus_type', models.CharField(db_comment='referral, binary, unilevel', max_length=255)),
                ('status', models.CharField(db_comment='paid, flushed, cforward', max_length=255)),
                ('date_time_paid', models.DateTimeField(blank=True, null=True)),
                ('date_time_to_pay', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'payments',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PersonalAccessTokens',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('tokenable_type', models.CharField(max_length=255)),
                ('tokenable_id', models.PositiveBigIntegerField()),
                ('name', models.CharField(max_length=255)),
                ('token', models.CharField(max_length=64, unique=True)),
                ('abilities', models.TextField(blank=True, null=True)),
                ('last_used_at', models.DateTimeField(blank=True, null=True)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'personal_access_tokens',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PinRequests',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('currency_id', models.PositiveIntegerField()),
                ('transaction_id', models.PositiveBigIntegerField(blank=True, null=True)),
                ('status', models.CharField(blank=True, max_length=255, null=True)),
                ('quantity', models.IntegerField()),
                ('amount_paid', models.CharField(max_length=255)),
                ('payment_mode', models.CharField(blank=True, max_length=255, null=True)),
                ('account_number', models.CharField(blank=True, max_length=255, null=True)),
                ('bank', models.CharField(blank=True, max_length=255, null=True)),
                ('payment_details', models.CharField(blank=True, max_length=255, null=True)),
                ('transaction_teller', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'pin_requests',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Pins',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('pin_number', models.CharField(max_length=255, unique=True)),
                ('package_id', models.PositiveBigIntegerField()),
                ('owner_id', models.PositiveBigIntegerField(blank=True, null=True)),
                ('pin_request_id', models.PositiveBigIntegerField(blank=True, null=True)),
                ('status', models.CharField(db_comment='1=used, 0=unused, 2=cancelled', max_length=255)),
                ('used_for', models.PositiveBigIntegerField(blank=True, null=True)),
                ('package_name', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'pins',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProductCategories',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('parent', models.IntegerField(blank=True, null=True)),
                ('name', models.CharField(max_length=255)),
                ('slug', models.CharField(blank=True, max_length=255, null=True)),
                ('desc', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('modified_at', models.DateTimeField(blank=True, null=True)),
                ('modified_by', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'product_categories',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProductDiscounts',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('desc', models.TextField(blank=True, null=True)),
                ('type', models.CharField(max_length=10)),
                ('value', models.FloatField(db_comment='percentage value or amount')),
                ('active', models.IntegerField()),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('modified_by', models.IntegerField(blank=True, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'product_discounts',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProductImages',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('product_id', models.IntegerField()),
                ('url', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'product_images',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProductInventories',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('product_id', models.IntegerField()),
                ('store_id', models.IntegerField()),
                ('quantity', models.IntegerField()),
                ('starting_inventory', models.IntegerField()),
                ('inventory_received', models.IntegerField()),
                ('inventory_shipped', models.IntegerField()),
                ('minimum_required', models.IntegerField()),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'product_inventories',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProductMetas',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('product_id', models.IntegerField()),
                ('key', models.CharField(max_length=255)),
                ('value', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'product_metas',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProductPrices',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('product_id', models.IntegerField()),
                ('currency_id', models.IntegerField()),
                ('price', models.FloatField()),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'product_prices',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProductPurchases',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('supplier_id', models.IntegerField()),
                ('product_id', models.PositiveBigIntegerField()),
                ('store_id', models.IntegerField()),
                ('number_received', models.IntegerField()),
                ('purchase_date', models.DateField()),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'product_purchases',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProductReviews',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('parent', models.IntegerField(blank=True, null=True)),
                ('product_id', models.PositiveBigIntegerField()),
                ('user_id', models.PositiveBigIntegerField()),
                ('rating', models.IntegerField()),
                ('review', models.TextField(blank=True, null=True)),
                ('status', models.CharField(max_length=8)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'product_reviews',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Products',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('desc', models.TextField(blank=True, null=True)),
                ('sku', models.CharField(max_length=255)),
                ('category_id', models.IntegerField()),
                ('type', models.IntegerField(blank=True, db_comment='1: mlm & retail, 2: mlm only, 3: retail only', null=True)),
                ('pv', models.FloatField()),
                ('active', models.IntegerField()),
                ('image_url', models.CharField(blank=True, max_length=255, null=True)),
                ('inventory_id', models.IntegerField(blank=True, null=True)),
                ('discount_id', models.IntegerField(blank=True, null=True)),
                ('modified_by', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'products',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProductSuppliers',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('desc', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'product_suppliers',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProductTags',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('product_id', models.IntegerField()),
                ('tag_id', models.IntegerField()),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'product_tags',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Sessions',
            fields=[
                ('id', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('user_id', models.PositiveBigIntegerField(blank=True, null=True)),
                ('ip_address', models.CharField(blank=True, max_length=45, null=True)),
                ('user_agent', models.TextField(blank=True, null=True)),
                ('payload', models.TextField()),
                ('last_activity', models.IntegerField()),
            ],
            options={
                'db_table': 'sessions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Settings',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('key', models.CharField(max_length=255)),
                ('value', models.CharField(max_length=255)),
                ('type', models.CharField(max_length=255)),
                ('options', models.CharField(blank=True, max_length=255, null=True)),
                ('category', models.CharField(blank=True, max_length=255, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('tooltip', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'settings',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Stores',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('slug', models.CharField(max_length=255, unique=True)),
                ('package_id', models.IntegerField()),
                ('description', models.TextField(blank=True, null=True)),
                ('address', models.CharField(max_length=255)),
                ('address2', models.CharField(blank=True, max_length=255, null=True)),
                ('city', models.CharField(max_length=255)),
                ('state', models.CharField(max_length=255)),
                ('country', models.CharField(max_length=255)),
                ('phone', models.CharField(max_length=255)),
                ('email', models.CharField(blank=True, max_length=255, null=True)),
                ('website', models.CharField(blank=True, max_length=255, null=True)),
                ('map', models.CharField(blank=True, max_length=255, null=True)),
                ('image_url', models.CharField(blank=True, max_length=255, null=True)),
                ('main', models.IntegerField()),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'stores',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Supports',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('ticket_id', models.CharField(blank=True, max_length=199, null=True)),
                ('parent_id', models.PositiveIntegerField(blank=True, null=True)),
                ('user_id', models.PositiveIntegerField()),
                ('reply_admin_id', models.PositiveIntegerField(blank=True, null=True)),
                ('subject', models.CharField(max_length=255)),
                ('message', models.TextField()),
                ('status_id', models.PositiveIntegerField()),
                ('urgency', models.CharField(db_comment='low, mid, high', max_length=199)),
                ('last_reply', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'supports',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Tags',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('tag', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'tags',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TelescopeEntries',
            fields=[
                ('sequence', models.BigAutoField(primary_key=True, serialize=False)),
                ('uuid', models.CharField(max_length=36, unique=True)),
                ('batch_id', models.CharField(max_length=36)),
                ('family_hash', models.CharField(blank=True, max_length=255, null=True)),
                ('should_display_on_index', models.IntegerField()),
                ('type', models.CharField(max_length=20)),
                ('content', models.TextField()),
                ('created_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'telescope_entries',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TelescopeEntriesTags',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entry_uuid', models.CharField(max_length=36)),
                ('tag', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'telescope_entries_tags',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TelescopeMonitoring',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'telescope_monitoring',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Testimonials',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('user_id', models.PositiveIntegerField()),
                ('message', models.TextField()),
                ('status', models.CharField(db_comment='pending, active, published', max_length=255)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'testimonials',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TicketStatuses',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('color', models.CharField(max_length=255)),
                ('sort_order', models.IntegerField()),
                ('show_active', models.IntegerField()),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ticket_statuses',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UpgradeRecords',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('user_id', models.PositiveIntegerField()),
                ('sponsor_id', models.PositiveIntegerField()),
                ('old_package_id', models.CharField(max_length=255)),
                ('old_package_name', models.CharField(max_length=255)),
                ('old_package_pv', models.CharField(max_length=255)),
                ('old_package_cost', models.CharField(max_length=255)),
                ('new_package_id', models.CharField(max_length=255)),
                ('new_package_name', models.CharField(max_length=255)),
                ('new_package_pv', models.CharField(max_length=255)),
                ('new_package_cost', models.CharField(max_length=255)),
                ('balance_pv', models.CharField(blank=True, max_length=255, null=True)),
                ('balance_referral_bonus', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'upgrade_records',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Users',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('firstname', models.CharField(max_length=255)),
                ('lastname', models.CharField(max_length=255)),
                ('username', models.CharField(max_length=255, unique=True)),
                ('gender', models.CharField(max_length=255)),
                ('email', models.CharField(max_length=255)),
                ('email_verified_at', models.DateTimeField(blank=True, null=True)),
                ('profession', models.CharField(blank=True, max_length=255, null=True)),
                ('skills', models.CharField(blank=True, max_length=255, null=True)),
                ('phone', models.CharField(max_length=255)),
                ('address', models.CharField(max_length=255)),
                ('address2', models.CharField(blank=True, max_length=255, null=True)),
                ('state', models.CharField(blank=True, max_length=255, null=True)),
                ('city', models.CharField(blank=True, max_length=255, null=True)),
                ('country', models.CharField(max_length=255)),
                ('referred_by', models.PositiveBigIntegerField(blank=True, null=True)),
                ('parent', models.PositiveBigIntegerField(blank=True, null=True)),
                ('position', models.CharField(blank=True, max_length=255, null=True)),
                ('stage_id', models.PositiveIntegerField()),
                ('package_id', models.PositiveBigIntegerField()),
                ('payment_method', models.CharField(blank=True, max_length=191, null=True)),
                ('currency_id', models.PositiveBigIntegerField(db_comment='default currency id')),
                ('active', models.IntegerField()),
                ('welcomed', models.IntegerField()),
                ('link_activated', models.IntegerField(blank=True, null=True)),
                ('upgrade_welcomed', models.IntegerField()),
                ('upgrade_record_id', models.IntegerField(blank=True, null=True)),
                ('date_activated', models.DateTimeField(blank=True, null=True)),
                ('verification_token', models.CharField(blank=True, max_length=255, null=True)),
                ('type', models.CharField(max_length=255)),
                ('rank', models.CharField(blank=True, max_length=191, null=True)),
                ('registration_pin', models.CharField(blank=True, max_length=255, null=True)),
                ('password', models.CharField(max_length=255)),
                ('remember_token', models.CharField(blank=True, max_length=100, null=True)),
                ('last_login_date', models.DateTimeField(blank=True, null=True)),
                ('last_login_ip', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('current_binary_pv', models.FloatField(blank=True, null=True)),
                ('spill_over_binary_pv', models.FloatField(blank=True, null=True)),
                ('cumulative_binary_pv', models.FloatField(blank=True, null=True)),
                ('last_cycle_binary', models.DateField(blank=True, null=True)),
                ('current_direct_pv', models.FloatField(blank=True, null=True)),
                ('spill_over_direct_pv', models.FloatField(blank=True, null=True)),
                ('cumulative_direct_pv', models.FloatField(blank=True, null=True)),
                ('last_cycle_direct', models.DateField(blank=True, null=True)),
                ('award_pv_left', models.FloatField(blank=True, null=True)),
                ('award_pv_right', models.FloatField(blank=True, null=True)),
                ('wallet', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'users',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UsersLoginLogs',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('user_id', models.PositiveBigIntegerField()),
                ('username', models.CharField(blank=True, max_length=255, null=True)),
                ('ip_address', models.CharField(blank=True, max_length=255, null=True)),
                ('date_time', models.DateTimeField()),
                ('action', models.CharField(db_comment='login, logout', max_length=255)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'users_login_logs',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserStores',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('user_id', models.IntegerField()),
                ('store_id', models.IntegerField()),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'user_stores',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WalletTransactions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('user_id', models.IntegerField()),
                ('amount', models.FloatField(blank=True, null=True)),
                ('type', models.CharField(db_comment='debit,credit', max_length=255)),
                ('currency_code', models.CharField(max_length=255)),
                ('currency_id', models.IntegerField()),
                ('details', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'wallet_transactions',
                'managed': False,
            },
        ),
    ]
